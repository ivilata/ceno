---
- name: create bridge user
  become: true
  user: name={{ bridgeuser }}

- name: install required system packages
  become: true
  apt: name={{ item }} update_cache=yes cache_valid_time=3600
  with_items:
    - git
    - nodejs  # delay ``npm`` and ``nodejs-legacy`` to avoid conflicts with vendor package
    - tor
    - privoxy
    - default-jre-headless
    - supervisor

# Install vendor NodeJS when the system's is too old.
- include: tasks/vendor-nodejs.yml
  vars:
    min_nodejs_version: 4
    nodejs_vendor_repo_key: "{{ bridge_home }}/nodesource.gpg.key"

- name: check for NPM and NodeJS legacy binaries
  command: which npm node  # already provided by vendor package
  register: which_node_result
  changed_when: false
  failed_when: false

- name: install pending NodeJS system packages
  become: true
  apt: name={{ item }} update_cache=yes cache_valid_time=3600
  with_items:
    - npm
    - nodejs-legacy
  when: which_node_result.rc != 0

- name: configure Privoxy to use Tor
  become: true
  lineinfile: >
    dest=/etc/privoxy/config
    regexp='^#+(\s*forward-socks5\s+/\s+127\.0\.0\.1:9050\s+\.\s*.*)'
    line='\1' backrefs=yes
  notify: restart Privoxy

- name: create Git repo directory
  become: true
  become_user: "{{ bridgeuser }}"
  file: name={{ git_clone_path | dirname }} state=directory

- name: clone Git repo
  become: true
  become_user: "{{ bridgeuser }}"
  git: repo={{ git_repo_url }} dest={{ git_clone_path }} accept_hostkey=yes

- name: link bridge source to final destination
  become: true
  become_user: "{{ bridgeuser }}"
  file: name={{ bridge_path }} state=link src={{ git_clone_path }}/ceno-box/ceno-bridge

- name: create protected bridge configuration directory
  become: true
  become_user: "{{ bridgeuser }}"
  file: name={{ bridge_path }}/.CENO state=directory mode=0700

- name: install Bundle Server NodeJS packages
  become: true
  become_user: "{{ bridgeuser }}"
  npm: path={{ bundler_path | dirname }}

- name: create Freenet directory
  become: true
  become_user: "{{ bridgeuser }}"
  file: name={{ freenet_path }} state=directory

- name: copy Freenet configuration from Git repo
  become: true
  become_user: "{{ bridgeuser }}"
  copy: src={{ bridge_path}}/{{ item }} dest={{ freenet_path }} remote_src=yes
  with_items:
    - freenet.ini
    - memory.autolimit

- name: download Freenet jars and seed nodes
  become: true
  become_user: "{{ bridgeuser }}"
  uri:
    url: "{{ item }}"
    dest: "{{ freenet_path }}/{{ item | basename }}"
    creates: "{{ freenet_path }}/{{ item | basename }}"
  with_items:
    - "{{ freenet_jar_url }}"
    - "{{ freenet_ext_jar_url }}"
    - "{{ bcprov_jar_url }}"
    - "{{ bcprov_jar_url }}"
    - "{{ seed_nodes_url }}"
  notify: restart Supervisor

- name: copy CENO Bridge Freenet plugin jar
  become: true
  become_user: "{{ bridgeuser }}"
  copy: src={{ local_bridge_jar_path }} dest={{ freenet_path }}
  notify: restart Supervisor

- name: copy CENO Reader binary
  become: true
  become_user: "{{ bridgeuser }}"
  copy: src={{ local_reader_path }} dest={{ reader_path }} mode=a+rx
  notify: restart Supervisor

- name: run CENO services under Supervisor
  become: true
  template: src=supervisor-ceno.conf.j2 dest=/etc/supervisor/conf.d/ceno.conf
  notify: restart Supervisor
